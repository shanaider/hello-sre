apiVersion: v1
kind: Service
metadata:
  name: redis2
  labels:
    app: redis2
spec:
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
  type: ClusterIP
  selector:
    app: redis2
---
apiVersion: v1
data:
  redis-password: ZjdYbVF1Y3U2S3BjdzJqaFVOeGJLeVdFam50ZUpKa1A=
kind: Secret
metadata:
  creationTimestamp: null
  name: redis2-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis2
spec:
  selector:
    matchLabels:
      app: redis2
  replicas: 1
  template:
    metadata:
      labels:
        app: redis2
    spec:
      containers:
      - name: redis
        image: redis:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
        command: ["/usr/local/bin/redis-server","--requirepass","$(REDIS_PASSWORD)"]
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis2-secret
              key: redis-password
        # data volume where redis writes data
        volumeMounts:
        - name: data
          mountPath: /data
          readOnly: false
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: redis2
---
# data volume
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis2
  labels:
    app: redis2
spec:
  storageClassName: default
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi